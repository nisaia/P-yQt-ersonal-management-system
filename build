#!/bin/bash

GREEN="\e[32m"
RED="\e[31m"
END_COLOR="\e[0m"
venv='virtual_enviroment'
books_database_file='database/books_database.db'
movies_database_file='database/movies_database.db'

function usage {
    echo "Usage: $0 [option]"

    echo 'List of options:
    
         -h: Display the help message
         -v: Create a virtual enviroment with all dependencies installed
         -c: Create database engine
         -a: Create the virtual enviroment and create database engine'
}

function create_virtual_enviroment {
    #CREATE VIRTUAL ENVIROMENT

    echo -e "${GREEN}Creating virtual enviroment...${END_COLOR}"
    sleep 3
    python3 -m venv $venv
    echo -e "${GREEN}$venv created.${END_COLOR}"

    echo

    #INSTALL DEPENDENCIES

    echo -e "${GREEN}Installing dependencies...${END_COLOR}"
    sleep 3
    . $venv/bin/activate
    echo -e "${GREEN}Upgrading pip command...${END_COLOR}"
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    if [ $? -ne 0 ]; then
        echo -e "${RED}Installation failed.${END_COLOR}"
        exit 1
    else
        echo -e "${GREEN}All dependencies installed.${END_COLOR}"
    fi

    deactivate
}

function create_database_engine {
    #CREATE DATABASE ENGINE

    echo -e "${GREEN}Creating database engine...${END_COLOR}"
    sleep 3
    if [ -f "$books_database_file" ] && [ -f "$movies_database_file" ]; then
        echo -e "${GREEN}Removing old database files..${END_COLOR}"
        rm $books_database_file $movies_database_file
    fi
    
    python3 -c "from database.db import create_database; create_database()"
    echo -e "${GREEN}Database engine created.${END_COLOR}"
    
    echo -e "${GREEN}Database filling...${END_COLOR}"
    sleep 3
    python3 fill_db.py

}

function header {
    echo ' __  /   __   \                                                   
|__)(   /  \|_ ) _ _ _ _  _  _ |  |.|_  _ _  _    |_    .| _| _ _ 
|    \\/\_\/|_/ (-| _)(_)| )(_||  |||_)| (_|| \/  |_)|_|||(_|(-|  
      /                                       /                   

'
}

function all {
    create_virtual_enviroment
    . $venv/bin/activate
    create_database_engine
}

clear
header

while getopts "achv" opt; do
    case ${opt} in
        a )
            all
            ;;
        h )
            usage
            ;;
        c )
            if [ -z "$VIRTUAL_ENV" ]; then
                echo -e "${RED}You must activate the virtual enviroment.${END_COLOR}"
                exit 1
            fi
            create_database_engine
            ;;
        v )
            create_virtual_enviroment
            ;;
        * )
            usage
            exit 1
            ;;
    esac
done

if [ $OPTIND -eq 1 ]; then
    usage
    exit 0
fi
